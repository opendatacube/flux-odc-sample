---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: ows
  namespace: web
  annotations:
    fluxcd.io/ignore: "false"   # temporarily make Flux ignore a manifest if set to true
    fluxcd.io/automated: "true"  # automated deployment of new container images
    fluxcd.io/tag.chart-image: semver:*
    fluxcd.io/tag.owsConfig: semver:*
    fluxcd.io/tag.ows: semver:*
spec:
  releaseName: ows
  helmVersion: v3
  chart:
    # Helm Charts: https://github.com/opendatacube/datacube-charts/tree/master/stable/datacube-ows
    repository: https://opendatacube.github.io/datacube-charts/charts/
    name: datacube-ows
    version: 0.18.16
  valueFileSecrets:
  - name: ows
  values:
#    Injected by Flux - using secrets
#    database:
#      database: ${db_name}
#      host: ${db_hostname}
#      existingSecret: ${db_secret}
    clusterInfo:
      envName: prod
    minReplicas: 20
    maxReplicas: 50
    ows:
      image:
        # Docker Hub: https://hub.docker.com/r/opendatacube/ows
        # Source Repository: https://github.com/opendatacube/datacube-ows
        repository: opendatacube/ows
        tag: "1.8.21"
        pullPolicy: IfNotPresent
      dockerArgs:
      - "gunicorn"
      - "-b"
      - "0.0.0.0:8000"
      - "-w"
      - "3"
      - "--threads=2"
      - "-k"
      - "gevent"
      - "--timeout"
      - "121"
      - "--keep-alive"
      - "5"
      - "--pid"
      - "gunicorn.pid"
      - "--log-level"
      - "info"
      - "--worker-tmp-dir"
      - "/dev/shm"
      - "--config"
      - "python:datacube_ows.gunicorn_config"
      - "datacube_ows.wsgi"
      enabled: true
      externalPort: 80
      internalPort: 8000
      targetCpu: 250
      resources:
        requests:
          cpu: 1
          memory: 1024Mi
        limits:
          cpu: 2
          memory: 4096Mi
      maxSurge: 25%
      maxUnavailable: 10%
      startupProbe:
        httpGet:
          path: /ping
          port: 8000
        periodSeconds: 10 # how long to wait between checks
        failureThreshold: 30 # how many failures to accept before failing
      readinessProbe:
        httpGet:
          path: /ping
          port: 8000
        initialDelaySeconds: 10
        periodSeconds: 10 # how long to wait between checks
        successThreshold: 1 # how many successes to hit before accepting
        failureThreshold: 3 # how many failures to accept before failing
        timeoutSeconds: 10 # how long to wait for a response
      livenessProbe:
        httpGet:
          path: /ping
          port: 8000
        initialDelaySeconds: 10
        periodSeconds: 10 # how long to wait between checks
        successThreshold: 1 # how many successes to hit before accepting
        failureThreshold: 3 # how many failures to accept before failing
        timeoutSeconds: 10 # how long to wait for a response
      additionalEnvironmentVars:
        WMS_CONFIG_PATH: /env/config/ows_refactored/ows_root_cfg.py
        DATACUBE_OWS_CFG: "ows_refactored.ows_root_cfg.ows_cfg"
        AWS_DEFAULT_REGION: ap-southeast-2
        AWS_NO_SIGN_REQUEST: "YES"
        prometheus_multiproc_dir: "/dev/shm"  # for prometheus scraper
        PYTHONPATH: "/env/config"
    owsConfig:
      # if using docker or configmap
      path: /env/config
      # filename: ows_cfg.py
      # subPath: config
      # configMap: cfg_map_name
      # url: cfg_url
      image:
        # Docker Hub: https://hub.docker.com/r/geoscienceaustralia/dea-datakube-config
        # Source Repository: https://github.com/GeoscienceAustralia/dea-config
        registry: docker.io
        repository: geoscienceaustralia/dea-datakube-config
        tag: "1.5.14"
        pullPolicy: IfNotPresent
        # src: /opt/dea-config/prod/services/wms/ows/ows_cfg.py
        cfg_folder: /opt/dea-config/prod/services/wms/ows_refactored

    ## Ingress annotations from secret / flux
    service:
      type: ClusterIP